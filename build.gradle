import com.anysoftkeyboard.tools.generatewordslist.MergeWordsListTask
import com.anysoftkeyboard.tools.makedictionary.MakeDictionaryTask

import com.anysoftkeyboard.tools.generatewordslist.GenerateWordsListTask

buildscript {
    repositories {
        jcenter()
        maven { url 'https://jitpack.io' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.3'

        classpath 'com.github.AnySoftKeyboard.AnySoftKeyboardTools:makedictionary:99bd3e6'
        classpath 'com.github.AnySoftKeyboard.AnySoftKeyboardTools:generatewordslist:99bd3e6'
        classpath 'org.jsoup:jsoup:1.9.1'
    }
}

apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.2'

    defaultConfig {
        applicationId "com.anysoftkeyboard.languagepack.tatar"
        minSdkVersion 7
        targetSdkVersion 25
        versionCode 100
        versionName "2.0.0"
    }

    signingConfigs {
        release {
            storeFile file("/tmp/language_pack.keystore")
            storePassword System.getenv("PACK_KEYSTORE_PASSWORD")
            keyAlias System.getenv("PACK_KEYSTORE_ALIAS")
            keyPassword System.getenv("PACK_KEYSTORE_KEY_PASSWORD")
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            zipAlignEnabled true
            debuggable false

            minifyEnabled false
        }
    }
}

def wordCharacters =  "АаӘәБбВвГгДдЕеЁёЖжҖҗЗзИиЙйКкЛлМмНнҢңОоӨөПпРрСсТтУуҮүФфХхҺһЦцЧчШшЩщЪъЫыЬьЭэЮюЯя".toCharArray()
def tatarCharacters = "АаБбВвГгДдЕеЁёЖжЗзИиЙйКкЛлМмНнОоПпРрСсТтУуФфХхЦцЧчШшЩщЪъЫыЬьЭэЮюЯя".toCharArray()

def additionalTatarInnerCharacters = "-".toCharArray();

task parseKitaphaneTatarstanRu(type: GenerateWordsListTask) {
    inputFiles new File(project.getProjectDir(), "dictionary/kitaphane.tatarstan.ru.united.txt")
    wordCharacters = tatarCharacters
    additionalInnerCharacters = additionalTatarInnerCharacters
//    locale new Locale("ru")
    outputWordsListFile new File(project.getProjectDir(), "dictionary/kitaphane.tatarstan.ru.united.xml")
}

task mergeAllWordLists(type: MergeWordsListTask) {
    dependsOn parseKitaphaneTatarstanRu

    inputWordsListFiles = [
        new File(project.getProjectDir(), "dictionary/kitaphane.tatarstan.ru.united.xml")
    ] as File[]
    outputWordsListFile new File(project.getProjectDir(), "dictionary/words_merged.xml")
    maxWordsInList 100000
}

task makeDictionary(type: MakeDictionaryTask) {
    doFirst {
        mkdir 'src/main/res/raw'
    }
    dependsOn mergeAllWordLists
    inputWordsListFile new File(project.getProjectDir(), "dictionary/words_merged.xml")
}

afterEvaluate { proj ->
    proj.tasks.all { task ->
        if (task.name.startsWith('generate') && task.name.endsWith('BuildConfig')) {
            task.dependsOn makeDictionary
        }
    }
}

dependencies {
    repositories {
        jcenter()
        maven { url "https://jitpack.io" }
    }
    compile 'com.github.AnySoftKeyboard:AnySoftKeyboard-API:1.7.0'
}